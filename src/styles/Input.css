/* =====================
   Base input styles
   (applies to all number inputs)
   Used throughout app for numeric fields
   ===================== */
/* Removed global input[type="number"] rule to avoid conflicts. Only HSV inputs are custom styled below. */

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* =====================
   Input group layouts
   (.input-group, .input-row, .input-container)
   Used for grouping and aligning input fields in forms
   ===================== */
.input-group {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
  width: 100%;
}

.input-row {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
  width: 100%;
}

.input-container {
  position: relative;
  display: flex;
  align-items: center;
  width: auto;
}

/* =====================
   Hex input group
   (.hex-input-group, .hex-input-group input, .hex-input-group button)
   Used in Left Drawer for key hex code input and color picking
   ===================== */
.hex-input-group {
  display: flex;
  flex-direction: row;
  gap: 8px;
  width: 100%;
  position: relative;
}

.hex-input-group input[type="text"] {
  flex: 1;
}

/* =====================
   Hue input group
   (.hue-input-group, .hue-control input)
   Used for hue slider and related controls
   ===================== */
.hue-input-group {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.hue-control {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.hue-control input {
  width: 100%;
}

/* =====================
   HSV Inputs in Left Drawer
   ===================== */
.hsv-inputs {
  display: flex;
  gap: 8px;
  margin-top: 16px;
}

.hsv-inputs input[type="number"] {
  width: 33%;
  box-sizing: border-box;
}

/* =====================
   Filter toggle
   (.filter-toggle input, .toggle-slider)
   Used for toggle switches in filter controls
   ===================== */
.filter-toggle {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
}

.filter-toggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-neutral-600);
  transition: transform 0.25s ease-out;
  border-radius: 20px;
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: white;
  transition: transform 0.25s ease-out;
  border-radius: 50%;
  transform: translateX(0);
}

input:checked + .toggle-slider {
  background-color: var(--color-primary-450);
}

input:checked + .toggle-slider:before {
  transform: translateX(20px);
}

/* =====================
   Common input layouts and styles
   Used to replace inline styles in App.tsx
   ===================== */
.input-flex-center {
  display: flex;
  align-items: center;
  gap: 12px;
}

.color-picker {
  width: 48px;
  height: 48px;
  padding: 0;
  border: 1px solid var(--color-neutral-800);
  border-radius: 4px;
  background: none;
  cursor: pointer;
  flex-shrink: 0;
  transition: border-color 0.2s ease;
}

.color-picker:hover {
  border-color: var(--color-primary-600);
}

.color-picker:focus {
  outline: none;
  border-color: var(--color-primary-700);
}

.color-picker::-webkit-color-swatch-wrapper {
  padding: 0;
}

.color-picker::-webkit-color-swatch {
  border: none;
}

.color-picker::-moz-color-swatch {
  border: none;
}

/* =====================
   Standard Input Styles (for all main input fields)
   ===================== */
.standard-input {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  background: var(--color-neutral-700);
  border: 1px solid var(--color-neutral-650);
  border-radius: 4px;
  color: var(--color-neutral-00);
  font-size: 14px;
  font-family: "Lato", sans-serif;
  padding: 0 14px;
  height: 48px;
  box-sizing: border-box;
  transition: border-color 0.2s;
  width: 100%;
}

.standard-input:focus {
  outline: none;
  border-color: var(--color-primary-500);
}

.standard-input::placeholder {
  color: var(--color-neutral-400);
  opacity: 1;
}

.standard-input:hover {
  border-color: var(--color-primary-450);
}

.standard-input:disabled:hover {
  border-color: var(--color-neutral-700);
}

.l-value-input {
  box-sizing: border-box;
}

/*
  Prefix classes for input fields with always-visible prefix using background SVG.
  Usage: Add .input-prefix-hex, .input-prefix-h, .input-prefix-s, .input-prefix-b, or .input-prefix-l to the input.
*/
.input-prefix-hex {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='20' width='20'%3E%3Ctext x='4' y='16' font-size='18' fill='%237e8187' font-family='Lato'%3E%23%3C/text%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: 4px 55%;
  background-size: 14px;
  padding-left: 20px !important;
}
.input-prefix-h {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' height='20' width='20'><text x='4' y='16' font-size='18' fill='%237e8187' font-family='Lato'>H</text></svg>");
  background-repeat: no-repeat;
  background-position: 4px 55%;
  background-size: 14px;
  padding-left: 24px !important;
}
.input-prefix-s {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' height='20' width='20'><text x='4' y='16' font-size='18' fill='%237e8187' font-family='Lato'>S</text></svg>");
  background-repeat: no-repeat;
  background-position: 4px 55%;
  background-size: 14px;
  padding-left: 24px !important;
}
.input-prefix-b {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' height='20' width='20'><text x='4' y='16' font-size='18' fill='%237e8187' font-family='Lato'>B</text></svg>");
  background-repeat: no-repeat;
  background-position: 4px 55%;
  background-size: 14px;
  padding-left: 24px !important;
}
